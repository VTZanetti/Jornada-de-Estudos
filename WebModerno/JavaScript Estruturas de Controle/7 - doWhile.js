// Fun√ß√£o que retorna um n√∫mero inteiro aleat√≥rio entre 'min' (inclusivo) e 'max' (exclusivo)
function aleatorio(min, max) {
    let numero = Math.random() * (max - min) + min; // Gera n√∫mero decimal entre min e max
    return Math.floor(numero); // Arredonda para baixo para obter um n√∫mero inteiro
}

// Inicializa a vari√°vel com 0
let opcao = 0; // Diferente da estrutura While, o Do/While n√£o √© necess√°rio atribuir um valor inicial para a vari√°vel opcao, ou seja, fazendo assim:
//somente iniciada a vari√°vel, sem valor inicial!


// Estrutura do...while garante que o bloco ser√° executado ao menos uma vez, 
do {
    opcao = aleatorio(-1, 10); // Gera n√∫meros inteiros entre -1 e 9
    console.log(`Opcao sorteada foi ${opcao}`);
} while (opcao != -1); // Encerra somente quando o valor sorteado for -1

console.log("Finalizado");

/*
üß† EXPLICA√á√ÉO DID√ÅTICA:

üîÅ `do...while` √© semelhante ao `while`, mas com uma diferen√ßa essencial:
    ‚û§ Ele executa o bloco **antes de verificar** a condi√ß√£o.
    ‚û§ Isso garante pelo menos **uma execu√ß√£o**, mesmo que a condi√ß√£o j√° seja falsa no in√≠cio.

üé≤ A fun√ß√£o `aleatorio(min, max)` utiliza:
    - `Math.random()` para gerar n√∫mero decimal entre 0 e 1 (exclusivo)
    - Multiplica por `(max - min)` e soma `min` ‚Üí gera valor entre `min` e `max` (exclusivo)
    - `Math.floor()` transforma esse n√∫mero em inteiro

‚úÖ CORRE√á√ÉO BOA PR√ÅTICA:
function aleatorio(min, max) {
    let numero = Math.random() * (max - min) + min;
    return Math.floor(numero);
}

üí° DICAS EXTRAS:
- Para incluir o valor m√°ximo no sorteio (ex: permitir 10), use:
    Math.floor(Math.random() * (max - min + 1) + min);

- Sempre declare vari√°veis com `let`, `const` ou `var` para evitar polui√ß√£o do escopo global.
*/
