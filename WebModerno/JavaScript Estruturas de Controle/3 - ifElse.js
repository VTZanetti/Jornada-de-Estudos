// Declara√ß√£o de uma fun√ß√£o an√¥nima atribu√≠da √† constante imprimirResultado
const imprimirResultado = function(nota) {
    if (nota >= 7) {
        console.log("Aprovado");
    } else {
        console.log("Reprovado");
    }
}

// Chamadas de teste:
imprimirResultado(10);      // Sa√≠da: Aprovado (10 >= 7)
imprimirResultado(4);       // Sa√≠da: Reprovado (4 < 7)
imprimirResultado("Epa!");  // Sa√≠da: Reprovado (veja explica√ß√£o abaixo)

/*
üß† EXPLICA√á√ÉO CORRIGIDA:

No caso de `imprimirResultado("Epa!")`, acontece o seguinte:

1Ô∏è‚É£ A fun√ß√£o recebe uma **string** como argumento, n√£o um n√∫mero.
2Ô∏è‚É£ A compara√ß√£o `nota >= 7` for√ßa o JavaScript a tentar **converter** a string para n√∫mero.
3Ô∏è‚É£ Como "Epa!" n√£o pode ser convertido para um n√∫mero v√°lido, o resultado √© `NaN` (Not a Number).
4Ô∏è‚É£ Qualquer compara√ß√£o com `NaN` (inclusive `NaN >= 7`) resulta em **false**.
5Ô∏è‚É£ Por isso, o bloco `else` √© executado, e o console exibe: `Reprovado`.

‚úÖ Conclus√£o: **"Epa!" gera "Reprovado"** porque a convers√£o falha e a compara√ß√£o resulta em `false`.

üîí BOA PR√ÅTICA: sempre validar o tipo do dado antes de usar:

*/

const imprimirResultadoSeguro = function(nota) {
    if (typeof nota !== "number") {
        console.log("Nota inv√°lida!");
        return;
    }

    if (nota >= 7) {
        console.log("Aprovado");
    } else {
        console.log("Reprovado");
    }
}

// Testes mais seguros:
imprimirResultadoSeguro(10);     // Aprovado
imprimirResultadoSeguro(4);      // Reprovado
imprimirResultadoSeguro("Epa!"); // Nota inv√°lida!

/*
üí° DICA FINAL:
JavaScript realiza coer√ß√£o impl√≠cita de tipos (type coercion),
ent√£o sempre que houver compara√ß√£o de valores vindos de fora,
verifique o tipo com `typeof` ou use fun√ß√µes como `Number()` para converter de forma segura.
*/
