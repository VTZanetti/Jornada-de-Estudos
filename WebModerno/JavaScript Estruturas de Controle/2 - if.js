// Fun√ß√£o teste1 verifica se o n√∫mero √© maior que 7.
// Se for, imprime o n√∫mero. Independentemente disso, imprime "final".
function teste1(num) {
    if (num > 7) // sem chaves, apenas a primeira linha ap√≥s o if √© condicionada
        console.log(num);  // ser√° executado apenas se num > 7

    console.log("final");  // sempre ser√° executado, pois est√° fora do if
}

// Chamadas da fun√ß√£o:
teste1(6);  // Sa√≠da: final (6 n√£o √© > 7, ent√£o s√≥ imprime "final")
teste1(8);  // Sa√≠da: 8 \n final (8 √© > 7, ent√£o imprime os dois)

// ---------------------------------------------------------------------------

// Fun√ß√£o teste2 tem um erro sutil: ponto e v√≠rgula logo ap√≥s o if
function teste2(num) {
    if (num > 7); { // <- esse ponto e v√≠rgula FINALIZA o if, tornando o bloco abaixo sempre executado
        console.log(num); // isso ser√° executado SEMPRE, independentemente da condi√ß√£o
    }
}

// Chamadas da fun√ß√£o:
teste2(6);  // Sa√≠da: 6 (mesmo 6 n√£o sendo > 7)
teste2(8);  // Sa√≠da: 8 (condizente com a condi√ß√£o, mas tamb√©m afetada pelo erro)

// ---------------------------------------------------------------------------

/*
üß† EXPLICA√á√ÉO DID√ÅTICA:

1Ô∏è‚É£ No JavaScript, o uso do ponto e v√≠rgula ap√≥s a declara√ß√£o do 'if' como:
    if (condi√ß√£o);  <-- ENCERRA o 'if' ali!
    {
        // este bloco ser√° executado SEMPRE, pois n√£o est√° mais condicionado
    }

2Ô∏è‚É£ O correto seria:
    if (condi√ß√£o) {
        // bloco de c√≥digo executado apenas se a condi√ß√£o for verdadeira
    }

üîç Exemplo corrigido da fun√ß√£o teste2:
function teste2(num) {
    if (num > 7) {
        console.log(num);
    }
}

üî¥ DICA IMPORTANTE:
Evite omitir chaves em estruturas condicionais, mesmo quando s√≥ h√° uma linha.
Isso evita erros sutis como esse e torna o c√≥digo mais leg√≠vel e seguro.

*/
